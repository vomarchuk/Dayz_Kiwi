// General settings
Skills.AllowSkillsReset = true;                             // [type: bool; default: true] If this setting is enabled, the player can reset their perks in the UI.
Skills.ResetAllOnDeath = false;                             // [type: bool; default: false] If this setting is enabled, all skills and perks of the character will be reset to 0 after death. If this setting is disabled - skills will be reduced by the modifier defined in Skills.ExperienceLoseModifier.
Skills.ExperienceGainModifier = 1;                          // [type: float; default: 1] Modifier of gaining skill experience. Set to 2.5 to take 2.5 times more skill experience.
Skills.ExperienceLoseModifier = 1;                          // [type: float; default: 1] Modifier of losing skill experience when died. Set to 0 to disable experience lose on death.
Skills.ExperienceLosePercentage = 0.10;                     // [type: float; default: -1] If this value is greater than zero - the player will lose a percentage of experience on death, instead of a fixed value from the config. This value can be -1 when disabled (by default) and in the range from 0 to 1 when enabled (where 1 is 100%)
Skills.ExperienceLoseOnResetPerks = 0.5;                    // [type: float; default: 0.5] Sets the percentage of experience that the player will get back after resetting skill perks where 0.5 is 50% of experience. Set to 1.0 to take all experience back after reset.
Skills.MeleeEvoidStaminaMin = 1;                            // [type: float; default: 1] Sets the minimum value of stamina consumption when successfully blocking a hit. A random value between the minimum and maximum is selected while blocking a hit.
Skills.MeleeEvoidStaminaMax = 3;                            // [type: float; default: 3] Sets the maximum value of stamina consumption when successfully blocking a hit. A random value between the minimum and maximum is selected while blocking a hit.
Skills.AllowCraftingWithoutPerks = false;                   // [type: bool; default: false] If this setting is disabled - then crafting recipes requiring a specific perk will not be available until the player has acquired first level of the required perk. If this setting is enabled - crafts are always available, but the quality of the result item will be bad.
Skills.CraftingExpGain = 10;                                // [type: int; default: 10] Sets the value of experience that the player will gain by crafting skill-based items. This parameter is also affected by 'ExperienceGainModifier'.
Skills.SingleSkillbookReading = true;                       // [type: bool; default: true] If this option is enabled - the player can read a book that gives experience to a skill only once.
Skills.DeleteSkillbookAfterReading = true;                  // [type: bool; default: true] If this option is enabled - skill book will be deleted after the reading by player.

// Athletic
Skills.AthleticCheckDistance = 100;                         // [type: int; default: 100] Sets the distance a player must run to gain athletic experience.
Skills.AthleticExpGain = 10;                                // [type: int; default: 10] Sets the value of experience points that the player will gain by running. This parameter is also affected by 'ExperienceGainModifier'.
Skills.AthleticCooldownModifier = 10;                       // [type: float; default: 10] Sets a modifier for the stamina recovery cooldown. Use 1.0 to back vanilla cooldown value.

// Strength
Skills.StrengthMeleeLightGainChance = 1;                  // [type: float; default: 0.1] Sets the chance the player will gain experience for a successful light melee attack.
Skills.StrengthMeleeLightGainExp = 2;                      // [type: int; default: 15] Sets the value of experience points that the player will gain for a successful light melee attack. This parameter is also affected by 'ExperienceGainModifier'.
Skills.StrengthMeleeHeavyGainChance = 1;                  // [type: float; default: 0.5] Sets the chance the player will gain experience for a successful heavy melee attack.
Skills.StrengthMeleeHeavyGainExp = 7;                      // [type: int; default: 30] Sets the value of experience points that the player will gain for a successful heavy melee attack. This parameter is also affected by 'ExperienceGainModifier'.
Skills.StrengthItemsUseGainChance = 0.2;                    // [type: float; default: 0.2] Sets the chance the player will gain experience for the use of tools (chopping firewood, extracting stones, etc).
Skills.StrengthItemsUseGainExp = 10;                        // [type: int; default: 10] Sets the value of experience points that the player will gain for the use of tools (chopping firewood, extracting stones, etc). This parameter is also affected by 'ExperienceGainModifier'.
Skills.StrengthHandsPerkThreshold = 20;                     // [type: float; default: 20] Sets the maximum weight of the object that the player can take in his hands without the 'Sturdy Hands' perk. (in kilograms)

// Metabolism
Skills.MetabolismConsumeFoodExpMod = 0.8;                   // [type: float; default: 1] Sets the modifier for gained metabolism skill experience when player is eating a food.
Skills.MetabolismConsumeWaterExpMod = 0.8;                  // [type: float; default: 1] Sets the modifier for gained metabolism skill experience when player is drinking a water.

// Stealth
Skills.StealthCatVisionPower = 1;                           // [type: float; default: 1] Sets the modifier of power for the CatVision perk.
Skills.StealthCheckDistance = 25;                           // [type: int; default: 30] Sets the distance a player must crouch to gain stealth experience.
Skills.StealthExpGain = 4;                                  // [type: int; default: 10] Sets the value of experience points that the player will gain by crouching. This parameter is also affected by 'ExperienceGainModifier'.
Skills.StealthInvisibleManCritDistance = 2.5;                 // [type: float; default: 2.5] Sets the minimum distance value. If the player comes closer than this distance to the zombie - the perk InvisibleMan stops working.
Skills.StealthWolfInstinctCritDistance = 5;                 // [type: float; default: 5] Sets the minimum distance value. If the player comes closer than this distance to the wolf - the perk WolfInstinct stops working.
Skills.StealthBearsFriendCritDistance = 10;                 // [type: float; default: 10] Sets the minimum distance value. If the player comes closer than this distance to the bear - the perk BearsFriend stops working.

// Survival
Skills.SurvTemperatureModifier = 0.5;                       // [type: float; default: 0.5] Sets the modifier value that is multiplied by the environment temperature modifier calculated from ReducedTempModifier of the survival skill.
Skills.SurvIgniteFireBaseChance = 0.2;                      // [type: float; default: 0.2] Sets the base chance of starting fire in additional to the StartingFire perk chance.
Skills.SurvMakeFireSuccessGainExp = 50;                     // [type: int; default: 50] Sets the value of experience points that the player will gain for successfully making a fire. This parameter is also affected by 'ExperienceGainModifier'.
Skills.SurvMakeFireFailGainExp = 10;                        // [type: int; default: 10] Sets the value of experience points that the player will gain for trying to making a fire. This parameter is also affected by 'ExperienceGainModifier'.
Skills.SurvKillZombieGainExp = 5;                           // [type: int; default: 5] Sets the value of experience points that the player will gain when kill a zombie. This parameter is also affected by 'ExperienceGainModifier'.
Skills.SurvLifetimeGainExp = 100;                           // [type: int; default: 100] Sets the value of experience points that the player will gain when survived for a long time. This parameter is also affected by 'ExperienceGainModifier'.
Skills.SurvLifetimeOffset = 3600;                           // [type: int; default: 3600] Sets the cyclic time interval in seconds after which the player will be awarded additional experience points for the survival skill.
Skills.SurvOverrideStartFireTime = 15;                      // [type: float; default: 15] Overrides the time for starting the fire. If the value is -1, the default value will be used instead.
Skills.SurvCookingOnStickExpGain = 5;                       // [type: int; default: 5] Sets the value of experience points that the player will gain for successfully cooking a food on stick. This parameter is also affected by 'ExperienceGainModifier'.

// Hunting
Skills.HuntingKillAnimalExpGainModifier = 0.2;              // [type: float; default: 1] Sets the value of the experience modifier that the player will get after killing an animal. This modifier is multiplied by the parameter terjeOnKillHuntingExp from the animal's config.
Skills.HuntingHeadshotAnimalExpGainModifier = 0.5;          // [type: float; default: 1] Sets the value of the experience modifier that the player will get after killing an animal with headshot in additional to HuntingKillAnimalExpGainModifier. This modifier is multiplied by the parameter terjeOnHeadshotHuntingExp from the animal's config.
Skills.HuntingButchAnimalExpGainModifier = 1;               // [type: float; default: 1] Sets the value of the experience modifier that the player will get after butchering an animal. This modifier is multiplied by the parameter terjeOnButchHuntingExp from the animal's config.
Skills.HuntingTrapAnimalExpGainModifier = 1;                // [type: float; default: 1] Sets the value of the experience modifier that the player will get after cathing an animal by the trap. This modifier is multiplied by the parameter terjeOnCatchAnimalHuntingExp from the trap's config.
Skills.HuntingOverrideSkinningTime = 60;                    // [type: float; default: 60] Sets the time of skinning animal carcasses for use with the QuickSkinning perk. If the value is -1, the default value will be used instead.
Skills.HuntingOverrideKnifeDamage = 100;                    // [type: float; default: 100] Sets the absolute damage value for a knife when skinning animal carcasses. Affected by MasterKnife perk.
Skills.HuntingOverrideMeatInitQuantity = 0.2;               // [type: float; default: 0.25] Sets the maximum initial random quantity for the one peace of meat that can be produced during the skinning without skills. The MeatHunter modifier will be added to this value. Value range from 0 (0%) to 1 (100%).
Skills.HuntingOverrideMeatMinQuantity = 0.1;                // [type: float; default: 0.25] Sets the minimum quantity for the one peace of meat that can be produced during the skinning without skills. Value range from 0 (0%) to 1 (100%).
Skills.HuntingOverrideBonesInitHp = 0;                      // [type: float; default: 0] Sets the minimum health for the bones that can be produced during the skinning without skills. Value range from 0 (0%) to 1 (100%).

// Fishing
Skills.FishingSuccessCatchGainExp = 100;                    // [type: int; default: 200] Sets the experience value that the player will receive if the catch is successful. This parameter is also affected by 'ExperienceGainModifier'.
Skills.FishingFailedCatchGainExp = 25;                      // [type: int; default: 50] Sets the experience value that the player will receive if the catch is failed. This parameter is also affected by 'ExperienceGainModifier'.
Skills.FishingOverrideFilletMinQuantity = 0.2;              // [type: float; default: 0.2] Sets the minimum quantity for the one peace of fish fillet that can be produced during the skinning without skills. Value range from 0 (0%) to 1 (100%).
Skills.FishingOverrideRodDamage = 5;                        // [type: float; default: 5] Sets the absolute damage value for a fishing rod after a fishing action. Affected by StraightArms perk.
Skills.FishingOverrideHookDamage = 5;                       // [type: float; default: 5] Sets the absolute damage value for a fishing hook after a fishing action. Affected by StraightArms perk.
Skills.FishingFishSizeModifier = 0.2;                       // [type: float; default: 0.2] Sets the fish size modifier. It is used for the player to catch fish of different sizes for correct work of FishermanLuck skill.
Skills.FishingButchExpGainModifier = 1;                     // [type: float; default: 1] Sets the value of the experience modifier that the player will get after butchering (cleaning) an fish. This modifier is multiplied by the parameter terjeOnButchHuntingExp from the fish's config.

// Initial experience
Skills.InitialExpSkillimmunity = 0;                         // [type: int; default: 0] Sets the initial value of immunity skill experience for new player (for the first respawn only).
Skills.InitialExpSkillmed = 0;                              // [type: int; default: 0] Sets the initial value of med skill experience for new player (for the first respawn only).
Skills.InitialExpSkillathlc = 0;                            // [type: int; default: 0] Sets the initial value of athlc skill experience for new player (for the first respawn only).
Skills.InitialExpSkillstrng = 0;                            // [type: int; default: 0] Sets the initial value of strng skill experience for new player (for the first respawn only).
Skills.InitialExpSkillmtblsm = 0;                           // [type: int; default: 0] Sets the initial value of mtblsm skill experience for new player (for the first respawn only).
Skills.InitialExpSkillstlth = 0;                            // [type: int; default: 0] Sets the initial value of stlth skill experience for new player (for the first respawn only).
Skills.InitialExpSkillsurv = 0;                             // [type: int; default: 0] Sets the initial value of surv skill experience for new player (for the first respawn only).
Skills.InitialExpSkillhunt = 0;                             // [type: int; default: 0] Sets the initial value of hunt skill experience for new player (for the first respawn only).
Skills.InitialExpSkillfish = 0;                             // [type: int; default: 0] Sets the initial value of fish skill experience for new player (for the first respawn only).
